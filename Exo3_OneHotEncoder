#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Fri Sep 24 20:55:10 2021

@author: josedelcour
"""

import pandas as pd
import numpy as np

import seaborn as sns
from matplotlib import pyplot as plt

df = pd.read_csv('~/Downloads/AB_NYC_2019.csv')
df.fillna(0, inplace=True)
target = df['price']
target = (target>=152)
df= df.drop(columns=['price'])

from sklearn.compose import make_column_selector as selector

numerical_columns_selector = selector(dtype_exclude=object)
categorical_columns_selector = selector(dtype_include=object)

numerical_columns = numerical_columns_selector(df)
categorical_columns = categorical_columns_selector(df)


from sklearn.preprocessing import OneHotEncoder, StandardScaler

categorical_preprocessor = OneHotEncoder(handle_unknown="ignore")
numerical_preprocessor = StandardScaler()
from sklearn.compose import ColumnTransformer

preprocessor = ColumnTransformer([
    ('one-hot-encoder', categorical_preprocessor, categorical_columns[2:5]),
    ('standard-scaler', numerical_preprocessor, numerical_columns)])

from sklearn.linear_model import LogisticRegression
from sklearn.pipeline import make_pipeline

model = make_pipeline(preprocessor, LogisticRegression(max_iter=500))


from sklearn import set_config
set_config(display='diagram')

from sklearn.model_selection import train_test_split

data_trainfull, data_test, target_trainfull, target_test = train_test_split(
    df, target, random_state=42, train_size=0.8)

data_train, data_val, target_train, target_val = train_test_split(
   data_trainfull, target_trainfull, random_state=42, test_size=0.25)

_ = model.fit(data_train, target_train)

y_predict= model.predict(data_val)
(y_predict==target_val).mean()







